{
    // IntelliSense を使用して利用可能な属性を学べます。
    // 既存の属性の説明をホバーして表示します。
    // 詳細情報は次を確認してください: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "コンテナ内でデバッグ",
            "type": "go",
            "request": "attach",
            "mode": "remote",
            "remotePath": "/go/src/app", // ? DockerfileのWORKDIRで指定したパス
            "port": 2345, //  ? ポート番号はデバッグ用のポート番号に合わせる
            "host": "localhost",
            "showLog": true,
            "trace": "verbose",
        },
        {
            "name": "ローカルでデバッグ",
            "type": "go",
            "request": "launch",
            "mode": "auto",
            "program": "cmd/server/main.go", // メインのGoファイルへのパス
            "env": {
                "PORT": "4000",
                "MYSQL_USER": "root",
                "MYSQL_PASSWORD": "pass",
                "MYSQL_DATABASE": "v2_development",
                "MYSQL_TEST_DATABASE": "test_v2",
                "MYSQL_HOST": "127.0.0.1",
                "MYSQL_PORT": "3306",
                "SLACK_BOT_TOKEN": "xoxb-6221480812340-6993703419444-ohtzgLjhvrhrTnewJb6pL4Iy"
            },
            // "showLog": true,
            // "trace": "verbose"
        }
    ]
}




/*
@ホストマシンから実行する場合でもコンテナ内にアタッチして実行する場合でも上の設定で問題ない

必要な設定は以下の通り

*1. docker-compose.yml
    デバッガ用のポートを開放する
    （例: 2345:2345 ※ 2345 は任意の数字でOK)

*2. Dockerfile
    デバッガをインストールする
    （例: RUN go install github.com/go-delve/delve/cmd/dlv@latest）

*3. air.toml
    起動コマンドにオプションを追加する
    （例: cmd = "go build -gcflags=\"all=-N -l\" -o /tmp/main ./cmd/server"）
       ? -gcflags="all=-N -l" オプションは、Go のコンパイラに対して特定の指示を与えるために使用されます。
        ?    このオプションは必須ではありませんが、デバッグ時に役立つ設定です。具体的には以下の機能を持っています：
        ?        -N: コンパイラの最適化を無効にします。これにより、デバッグ中にソースコードと実行中のコードの対応がより明確になり、ブレークポイントが正確に機能するようになります。
        ?        -l: インライン展開を禁止します。これもデバッグを容易にするためのもので、関数呼び出しの構造をそのまま保持し、デバッガがステップ実行や関数の追跡をしやすくします。
        ?  デバッグ時の利点
        ?    これらのオプションを使用する主な利点は、デバッグプロセス中にプログラムの挙動がソースコードにより密接に対応することです。最適化を無効にすることで、変数の値が予期せず変更されたり、コードが再配置されたりすることなく、元のソースコードに忠実な形でプログラムが実行されます。

    起動したサーバーに対してデバッガをアタッチするためのコマンドを追加する
    （例: full_bin = "dlv --listen=:2345 --headless=true --api-version=2 --accept-multiclient exec /tmp/main"）

! 上の設定でコンテナ内でデバッグをする場合の注意点
デバックを切断で終了させる前にブレークポイントを削除しておかないと、デバッグ中のままになってしまう!!
*/

